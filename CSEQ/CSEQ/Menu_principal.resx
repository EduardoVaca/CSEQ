<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="x_picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>